apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'

// Begin of reading the sensitive data
def noKeyFound = '"NO_KEY_FOUND"'
def googleMapsAPIKey = noKeyFound
def thisAppLicensingKey = noKeyFound

/**
 * Can be used for any API Key
 *
 * If you have a Google Maps API Key, you can create sensitive_data.txt file in project's root directory
 * containing your API keys and this code will handle the changes.
 *
 * The file should look like this in sensitive_data.txt without any quotes
 *
 * googleMapsAPIKey YourKey
 */
def sensitiveDataFile = file('../sensitive_data.txt')
Properties sensitiveData = new Properties()

if (sensitiveDataFile.canRead()) {
    // Read the sensitive data from file sensitive_data.txt
    sensitiveData.load(new FileInputStream(sensitiveDataFile))

    if (sensitiveData != null) {
        if (sensitiveData.containsKey('googleMapsAPIKey')) {
            googleMapsAPIKey = sensitiveData['googleMapsAPIKey']
        }

        if (sensitiveData.containsKey('thisAppLicensingKey')) {
            thisAppLicensingKey = sensitiveData['thisAppLicensingKey']
        }
    }
}

/**
 * In this section a reviewer can insert directly his own
 * sensitive data by replacing the string "YOUR_API_KEY_GOES_HERE"
 * Just double click on the string and paste you own data
 */
if (googleMapsAPIKey == noKeyFound) {
    googleMapsAPIKey = '"YOUR_API_KEY_GOES_HERE"'
}
// End of reading the sensitive data


android {

    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    def appVersionCode = 65
    def appVersionName = "build${appVersionCode}"

    defaultConfig {
        applicationId "app.simple.positional"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        resValue "string", "googleMapsAPIKey", googleMapsAPIKey
        resValue "string", "thisAppLicensingKey", thisAppLicensingKey
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    flavorDimensions "version"
    productFlavors {
        lite {
            dimension "version"
            applicationIdSuffix ".lite"
            versionNameSuffix "_lite"
        }

        full {
            dimension "version"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

    // Tests
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.webkit:webkit:1.4.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    // Google Firebase, Services and Default android libs
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging:21.0.1'
    implementation 'com.google.android.gms:play-services-basement:17.5.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'

    // Third Party Implementations
    implementation 'org.shredzone.commons:commons-suncalc:3.4'
    implementation 'com.afollestad:viewpagerdots:1.0.0'

    // Room components
    implementation "androidx.room:room-ktx:2.2.6"
    kapt "androidx.room:room-compiler:2.2.6"
    androidTestImplementation "androidx.room:room-testing:2.2.6"

    // Leak Canary -- debugImplementation because LeakCanary should only run in debug builds.
    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
}

repositories {
    mavenCentral()
}
